

//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


namespace IDS348_FinalProject
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class Database1Entities : DbContext
{
    public Database1Entities()
        : base("name=Database1Entities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Chat> Chats { get; set; }

    public virtual DbSet<Comment> Comments { get; set; }

    public virtual DbSet<Follower> Followers { get; set; }

    public virtual DbSet<Hashtag> Hashtags { get; set; }

    public virtual DbSet<Like> Likes { get; set; }

    public virtual DbSet<Mensaje> Mensajes { get; set; }

    public virtual DbSet<Post> Posts { get; set; }

    public virtual DbSet<Save> Saves { get; set; }

    public virtual DbSet<User> Users { get; set; }


    public virtual int CreateUser(string userName, string names, string passwords, string profilePhoto, string email, string phone, Nullable<System.DateTime> birthday, string biography, string placeWhereLives, string sex)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var namesParameter = names != null ?
            new ObjectParameter("Names", names) :
            new ObjectParameter("Names", typeof(string));


        var passwordsParameter = passwords != null ?
            new ObjectParameter("Passwords", passwords) :
            new ObjectParameter("Passwords", typeof(string));


        var profilePhotoParameter = profilePhoto != null ?
            new ObjectParameter("ProfilePhoto", profilePhoto) :
            new ObjectParameter("ProfilePhoto", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var birthdayParameter = birthday.HasValue ?
            new ObjectParameter("Birthday", birthday) :
            new ObjectParameter("Birthday", typeof(System.DateTime));


        var biographyParameter = biography != null ?
            new ObjectParameter("Biography", biography) :
            new ObjectParameter("Biography", typeof(string));


        var placeWhereLivesParameter = placeWhereLives != null ?
            new ObjectParameter("PlaceWhereLives", placeWhereLives) :
            new ObjectParameter("PlaceWhereLives", typeof(string));


        var sexParameter = sex != null ?
            new ObjectParameter("Sex", sex) :
            new ObjectParameter("Sex", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateUser", userNameParameter, namesParameter, passwordsParameter, profilePhotoParameter, emailParameter, phoneParameter, birthdayParameter, biographyParameter, placeWhereLivesParameter, sexParameter);
    }


    public virtual int DeleteUser(string userName)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", userNameParameter);
    }


    public virtual ObjectResult<ReadUserByUserName_Result> ReadUserByUserName(string userName)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReadUserByUserName_Result>("ReadUserByUserName", userNameParameter);
    }


    public virtual int UpdateUser(Nullable<int> userID, string userName, string names, string passwords, string profilePhoto, string email, string phone, Nullable<System.DateTime> birthday, string biography, string placeWhereLives, string sex)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var namesParameter = names != null ?
            new ObjectParameter("Names", names) :
            new ObjectParameter("Names", typeof(string));


        var passwordsParameter = passwords != null ?
            new ObjectParameter("Passwords", passwords) :
            new ObjectParameter("Passwords", typeof(string));


        var profilePhotoParameter = profilePhoto != null ?
            new ObjectParameter("ProfilePhoto", profilePhoto) :
            new ObjectParameter("ProfilePhoto", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var birthdayParameter = birthday.HasValue ?
            new ObjectParameter("Birthday", birthday) :
            new ObjectParameter("Birthday", typeof(System.DateTime));


        var biographyParameter = biography != null ?
            new ObjectParameter("Biography", biography) :
            new ObjectParameter("Biography", typeof(string));


        var placeWhereLivesParameter = placeWhereLives != null ?
            new ObjectParameter("PlaceWhereLives", placeWhereLives) :
            new ObjectParameter("PlaceWhereLives", typeof(string));


        var sexParameter = sex != null ?
            new ObjectParameter("Sex", sex) :
            new ObjectParameter("Sex", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", userIDParameter, userNameParameter, namesParameter, passwordsParameter, profilePhotoParameter, emailParameter, phoneParameter, birthdayParameter, biographyParameter, placeWhereLivesParameter, sexParameter);
    }


    public virtual int DeletePost(Nullable<int> postID)
    {

        var postIDParameter = postID.HasValue ?
            new ObjectParameter("PostID", postID) :
            new ObjectParameter("PostID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePost", postIDParameter);
    }


    public virtual ObjectResult<GetPost_Result> GetPost(Nullable<int> postID)
    {

        var postIDParameter = postID.HasValue ?
            new ObjectParameter("PostID", postID) :
            new ObjectParameter("PostID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPost_Result>("GetPost", postIDParameter);
    }


    public virtual ObjectResult<Nullable<decimal>> InsertPost(Nullable<int> userID, string userName, string text, Nullable<System.DateTime> publicationDate, string tipoContenido, string uRLContenido)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var textParameter = text != null ?
            new ObjectParameter("Text", text) :
            new ObjectParameter("Text", typeof(string));


        var publicationDateParameter = publicationDate.HasValue ?
            new ObjectParameter("PublicationDate", publicationDate) :
            new ObjectParameter("PublicationDate", typeof(System.DateTime));


        var tipoContenidoParameter = tipoContenido != null ?
            new ObjectParameter("TipoContenido", tipoContenido) :
            new ObjectParameter("TipoContenido", typeof(string));


        var uRLContenidoParameter = uRLContenido != null ?
            new ObjectParameter("URLContenido", uRLContenido) :
            new ObjectParameter("URLContenido", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertPost", userIDParameter, userNameParameter, textParameter, publicationDateParameter, tipoContenidoParameter, uRLContenidoParameter);
    }


    public virtual int UpdatePost(Nullable<int> postID, Nullable<int> userID, string userName, string text, Nullable<System.DateTime> publicationDate, string tipoContenido, string uRLContenido)
    {

        var postIDParameter = postID.HasValue ?
            new ObjectParameter("PostID", postID) :
            new ObjectParameter("PostID", typeof(int));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var textParameter = text != null ?
            new ObjectParameter("Text", text) :
            new ObjectParameter("Text", typeof(string));


        var publicationDateParameter = publicationDate.HasValue ?
            new ObjectParameter("PublicationDate", publicationDate) :
            new ObjectParameter("PublicationDate", typeof(System.DateTime));


        var tipoContenidoParameter = tipoContenido != null ?
            new ObjectParameter("TipoContenido", tipoContenido) :
            new ObjectParameter("TipoContenido", typeof(string));


        var uRLContenidoParameter = uRLContenido != null ?
            new ObjectParameter("URLContenido", uRLContenido) :
            new ObjectParameter("URLContenido", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePost", postIDParameter, userIDParameter, userNameParameter, textParameter, publicationDateParameter, tipoContenidoParameter, uRLContenidoParameter);
    }


    public virtual ObjectResult<CreatePost_Result> CreatePost(Nullable<int> userID, string userName, string text, Nullable<System.DateTime> publicationDate, string tipoContenido, string uRLContenido)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var textParameter = text != null ?
            new ObjectParameter("Text", text) :
            new ObjectParameter("Text", typeof(string));


        var publicationDateParameter = publicationDate.HasValue ?
            new ObjectParameter("PublicationDate", publicationDate) :
            new ObjectParameter("PublicationDate", typeof(System.DateTime));


        var tipoContenidoParameter = tipoContenido != null ?
            new ObjectParameter("TipoContenido", tipoContenido) :
            new ObjectParameter("TipoContenido", typeof(string));


        var uRLContenidoParameter = uRLContenido != null ?
            new ObjectParameter("URLContenido", uRLContenido) :
            new ObjectParameter("URLContenido", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CreatePost_Result>("CreatePost", userIDParameter, userNameParameter, textParameter, publicationDateParameter, tipoContenidoParameter, uRLContenidoParameter);
    }

}

}

